//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrystalFolders.Properties {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CrystalFolders.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a About.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a About.
        /// </summary>
        public static string AboutTitle {
            get {
                return ResourceManager.GetString("AboutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ancel.
        /// </summary>
        public static string ancel {
            get {
                return ResourceManager.GetString("ancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Applying....
        /// </summary>
        public static string Applying {
            get {
                return ResourceManager.GetString("Applying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Application to customize your folder icons in seconds.
        /// </summary>
        public static string AppToCustomizeFolderIcons {
            get {
                return ResourceManager.GetString("AppToCustomizeFolderIcons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Back.
        /// </summary>
        public static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a C.
        /// </summary>
        public static string C {
            get {
                return ResourceManager.GetString("C", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Changes.
        /// </summary>
        public static string Changes {
            get {
                return ResourceManager.GetString("Changes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Change Theme....
        /// </summary>
        public static string ChangeTheme {
            get {
                return ResourceManager.GetString("ChangeTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Choose....
        /// </summary>
        public static string Choose {
            get {
                return ResourceManager.GetString("Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Choose Icon.
        /// </summary>
        public static string ChooseIcon {
            get {
                return ResourceManager.GetString("ChooseIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Configure as portable.
        /// </summary>
        public static string ConfigureAsPortable {
            get {
                return ResourceManager.GetString("ConfigureAsPortable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a estore.
        /// </summary>
        public static string estore {
            get {
                return ResourceManager.GetString("estore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Folders.
        /// </summary>
        public static string Folders {
            get {
                return ResourceManager.GetString("Folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Your folders have been customized. If there are no changes, refresh the window and/or desktop..
        /// </summary>
        public static string FoldersHaveBeenCustomized {
            get {
                return ResourceManager.GetString("FoldersHaveBeenCustomized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Your folders have been restored successfully..
        /// </summary>
        public static string FoldersHaveBeenRestored {
            get {
                return ResourceManager.GetString("FoldersHaveBeenRestored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a  folders have been skipped because customization is not allowed..
        /// </summary>
        public static string FoldersHaveBeenSkipped {
            get {
                return ResourceManager.GetString("FoldersHaveBeenSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Help.
        /// </summary>
        public static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Icon.
        /// </summary>
        public static string Icon {
            get {
                return ResourceManager.GetString("Icon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Icons.
        /// </summary>
        public static string Icons {
            get {
                return ResourceManager.GetString("Icons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Include subfolders.
        /// </summary>
        public static string IncludeSubfolders {
            get {
                return ResourceManager.GetString("IncludeSubfolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a It works by dragging folders to the left panel without checking any checkbox, otherwise this switch will not be able to turn on..
        /// </summary>
        public static string ItWorksByDraggingFolders {
            get {
                return ResourceManager.GetString("ItWorksByDraggingFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Language: English.
        /// </summary>
        public static string LanguageEnglish {
            get {
                return ResourceManager.GetString("LanguageEnglish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Language: Español.
        /// </summary>
        public static string LanguageEspañol {
            get {
                return ResourceManager.GetString("LanguageEspañol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Next.
        /// </summary>
        public static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Portable configuration only allows less than 30 folders..
        /// </summary>
        public static string OnlyAllowsLessThan30Folders {
            get {
                return ResourceManager.GetString("OnlyAllowsLessThan30Folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Options.
        /// </summary>
        public static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Please, wait....
        /// </summary>
        public static string PleaseWait {
            get {
                return ResourceManager.GetString("PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a pply.
        /// </summary>
        public static string pply {
            get {
                return ResourceManager.GetString("pply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Restore.
        /// </summary>
        public static string Restore {
            get {
                return ResourceManager.GetString("Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Restore from portable.
        /// </summary>
        public static string RestoreFromPortable {
            get {
                return ResourceManager.GetString("RestoreFromPortable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Restore subfolders.
        /// </summary>
        public static string RestoreSubfolders {
            get {
                return ResourceManager.GetString("RestoreSubfolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a There are more than 600 folders. Do you really want to continue?.
        /// </summary>
        public static string ThereAreMoreThan600Folders {
            get {
                return ResourceManager.GetString("ThereAreMoreThan600Folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Too many folders.
        /// </summary>
        public static string TooManyFolders {
            get {
                return ResourceManager.GetString("TooManyFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ustomize.
        /// </summary>
        public static string ustomize {
            get {
                return ResourceManager.GetString("ustomize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a View icon on any PC.
        /// </summary>
        public static string ViewIconOnAnyPC {
            get {
                return ResourceManager.GetString("ViewIconOnAnyPC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Configure as portable   will make the custom icon visible on any other PC..
        /// </summary>
        public static string WillMakeTheCustomIconVisible {
            get {
                return ResourceManager.GetString("WillMakeTheCustomIconVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Restore from portable   will remove any icons that have been copied into the folder that was configured as portable..
        /// </summary>
        public static string WillRemoveAnyIconsCopied {
            get {
                return ResourceManager.GetString("WillRemoveAnyIconsCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Yes.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Because the icon will be copied (hidden) within each folder, there is a limit to customize which is up to 30..
        /// </summary>
        public static string YouCanCustomizeUpTo30Folders {
            get {
                return ResourceManager.GetString("YouCanCustomizeUpTo30Folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a You can restore up to 30 folders at a time, which was the limit..
        /// </summary>
        public static string YouCanRestoreUpTo30Folders {
            get {
                return ResourceManager.GetString("YouCanRestoreUpTo30Folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Your folders are being customized..
        /// </summary>
        public static string YourFoldersAreBeingCustomized {
            get {
                return ResourceManager.GetString("YourFoldersAreBeingCustomized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Your folders are being restored..
        /// </summary>
        public static string YourFoldersAreBeingRestored {
            get {
                return ResourceManager.GetString("YourFoldersAreBeingRestored", resourceCulture);
            }
        }
    }
}
